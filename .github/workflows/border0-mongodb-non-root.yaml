name: Border0 MongoDB Query no root
on:
  workflow_dispatch:

jobs:
  query-mongodb-via-border0:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Border0 CLI
        run: |
          sudo curl -fsSL https://download.border0.com/linux_amd64/border0 -o /usr/local/bin/border0
          sudo chmod +x /usr/local/bin/border0

      - name: Allow non root to manage networking
        run: |
        
          sudo apt-get update
          sudo apt-get install -y libcap2-bin

          # Resolve the real ip binary, since /usr/sbin/ip is a symlink on Ubuntu 24.04
          IP_BIN="$(readlink -f "$(command -v ip)")"
          echo "ip binary resolved to: $IP_BIN"
          
          sudo setcap cap_net_admin+eip /usr/local/bin/border0
          sudo setcap cap_net_admin+eip "$IP_BIN"

      - name: Verify capability on binary
        run: |
          which border0
          getcap /usr/local/bin/border0 || true

      - name: Check TUN device
        run: |
          if [ ! -e /dev/net/tun ]; then
            sudo modprobe tun
          fi
          ls -l /dev/net/tun || true
          # Make it readable by non root for this job if needed
          sudo chmod 0666 /dev/net/tun || true

      - name: Start Border0 agent and VPN
        env:
          BORDER0_TOKEN: ${{ secrets.BORDER0_TOKEN }}
        run: |
          border0 node start &
          echo $! > /tmp/border0_agent.pid
          sleep 2
          border0 node vpn start

      - name: Install mongosh
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg curl ca-certificates
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor
          echo "deb [signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version

      - name: Wait for MongoDB to be reachable
        run: |
          URI="${MONGO_URI:-mongodb://ddb-password:27017/library}"
          for i in {1..12}; do
            if mongosh "$URI" --eval "db.runCommand({ ping: 1 })" --quiet >/dev/null 2>&1; then
              echo "MongoDB reachable"
              exit 0
            fi
            echo "Waiting for MongoDB... attempt $i"
            sleep 5
          done
          echo "MongoDB not reachable after retries"
          exit 1

      - name: Run sample query
        id: mongoquery
        run: |
          URI="${MONGO_URI:-mongodb://ddb-password:27017/library}"
          echo 'db.books.find().limit(10).toArray()' | mongosh "$URI" --quiet | tee /tmp/query_output.json

      - name: Upload query output
        uses: actions/upload-artifact@v4
        with:
          name: mongodb-query-output
          path: /tmp/query_output.json

      - name: Stop VPN and agent
        if: always()
        run: |
          border0 node vpn stop || true
          if [ -f /tmp/border0_agent.pid ]; then kill "$(cat /tmp/border0_agent.pid)" || true; fi

      - name: Route table debug on failure
        if: failure()
        run: |
          echo "Route debug due to failure"
          ip addr || true
          ip route || true
          ip rule || true
          ip route get 8.8.8.8 || true

      - name: Fallback start of VPN with sudo
        if: failure()
        env:
          BORDER0_TOKEN: ${{ secrets.BORDER0_TOKEN }}
        run: |
          echo "Retrying VPN start with sudo only for this step"
          sudo -E env BORDER0_TOKEN="$BORDER0_TOKEN" border0 node vpn start || true
